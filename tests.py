
import aws_kms_lambda_bitcoin._lambda.functions.btc_signer.lambda_function as lf


def test_hmac() -> None:
    key = b'00000000000000000000000000000000'
    msg = b'11111111111111111111111111111111'

    # hmac signature generated by rust code:
    # Cargo.toml:
    # sha2 = "0.10.8"
    # hmac = "0.12.1"

    # fn main() {
    #     use hmac::Hmac;
    #     use hmac::Mac;
    #     use sha2::Sha256;
    #     let secret_key = b"00000000000000000000000000000000";
    #     let message = b"11111111111111111111111111111111";
    #     let mut hmac_instance =
    #         Hmac::<Sha256>::new_from_slice(secret_key).expect("Failed to create HMAC instance");
    #     hmac_instance.update(message);
    #     let hmac_digest = hmac_instance.finalize().into_bytes();

    #     println!("{:?}", hex::encode(hmac_digest));
    # }
    rustsig = bytes.fromhex("af46a312a09483576fda6c8b6dbee25b41c9f1fd23269385705797bf95c90d91")

    assert lf.verify_hmac(key=key, message=msg, hmacsignature=rustsig)
